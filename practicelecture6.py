# -*- coding: utf-8 -*-
"""Practicelecture6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nBtTAuzq2NtUpQFHEuX-BiN2BrOIWy-Q
"""

#RECURSION
def countdown(n):
  if n == 0: #This is the 'base case'
    print("Blast-off")
  else:
      print(n)
      countdown(n-1)
countdown(10)

#THE RETURN STATEMENT
def cube(num):
 return num*num*num

print(cube(3)) #What's the result?



#THE RETURN STATEMENT
def cube(num):
 num*num*num

print(cube(3)) #What's the result?

# Input: ths function takes two integers as an argument
# Output: it prints "s" n times.
def print_n(s,n):
  if n <= 0:
    return # This stops the function if n is less than or equal to zero!
  print(s)
  print_n(s, n-1)

print_n(10,5)

def sumInt(num,other):
  if other == 0:
    return
  print(num)
  sumInt(num, other-1)
 
sumInt(14,14)

def distance(x1, y1, x2, y2):
  return 0.0
print (distance(1,2,3,4))

import math
def distance(x1,y1,x2,y2):
  dx = x2 - x1 #distance between the x values
  dy =y2 - y1 #distance between the y values
  print ("dx is", dx) #testing
  print ("dy is", dy) #testing
  dsquared = dx**2 + dy**2
  result = math.sqrt(dsquared)
  return result

distance (1,2,3,4)

#RECURSION
def countdown(n):
  if n == 0: #This is the 'base case'
    print("Blast-off")
  else:
      print(n)
      countdown(n)
countdown(10)